/**
 * キャッシュを防ぐためのHTTPヘッダーを提供する関数
 *
 * getNoCacheHeaders関数が必要な理由:
 * 1. セキュリティリスク防止: キャッシュされた認証情報が漏洩するリスクを軽減
 * 2. 認証状態の一貫性: ブラウザがキャッシュした古い認証状態を表示することを防止
 * 3. ログアウト後の安全性: ログアウト後にブラウザバックで保護ページを表示できてしまう問題を防止
 * 4. 共有端末での情報漏洩防止: 公共の端末でセッション情報が残らないようにする
 *
 * 具体例:
 * - このヘッダーがない場合、ユーザーがログアウト後にブラウザバックすると
 *   キャッシュから保護ページが表示され、セキュリティ上の問題となる
 * - 認証状態が変更されてもキャッシュが優先され、最新の状態が反映されない
 *
 * @returns キャッシュを無効化するHTTPヘッダーオブジェクト
 */
export const getNoCacheHeaders = () => {
  return {
    "Cache-Control": "no-store, no-cache, must-revalidate, proxy-revalidate",
    Pragma: "no-cache",
    Expires: "0",
  };
};
